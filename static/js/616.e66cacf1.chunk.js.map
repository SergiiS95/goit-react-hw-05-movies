{"version":3,"file":"static/js/616.e66cacf1.chunk.js","mappings":"4LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CACZC,QAAS,OACTC,eAAgB,SAChBC,UAAW,QAEbC,aAAa,GACbC,SAAS,EACTC,UAAU,yBACVC,iBAAiB,UACjBC,iBAAiB,UACjBC,kBAAkB,WAGvB,C,4HCpBD,EAA+B,mCAA/B,EAAoF,sC,SCmFpF,EA/EqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAuBjB,IArBAC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CAGEM,GAAW,IAEXI,EAAAA,EAAAA,IAAmBV,GAChBW,MAAK,SAAAC,GACJR,EAAaQ,EACd,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPX,GAAW,EACZ,GAde,CAkBrB,GAAE,CAACN,IAECG,EAAL,CAEA,IAAQe,EAAuDf,EAAvDe,MAAOC,EAAgDhB,EAAhDgB,YAAaC,EAAmCjB,EAAnCiB,OAAQC,EAA2BlB,EAA3BkB,SAC9BC,GAAyB,GADgCnB,EAAjBoB,cACXC,QAAQ,GAE3C,OACE,6BACE,SAAC,KAAD,CAAMC,GAAE,oBAAElB,EAASmB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAlC,UACE,oBAAQC,KAAK,SAASC,UAAWC,EAAjC,UACG,IAAI,uBAIT,iBAAKD,UAAWC,EAAhB,WACE,mBACA,gBACEC,IACEZ,EAAW,8CACgCA,GACvC,8EAENa,IAAG,iBAAYd,GACf9B,MAAM,WAGR,4BACE,wBAAK8B,KACL,yBAAG,eAAaI,EAAO,QACvB,wBAAI,cACJ,uBAAID,KACJ,wBAAI,YACJ,uBAAID,EAAOa,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,eAG5C,mBAEA,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAAMV,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,mBACA,SAAC,KAAD,IACCpB,IAAW,SAACnB,EAAA,EAAD,MA/CM,CAkDvB,C,+LChFKkD,EAAM,+BACNC,EAAU,mCAEHC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACgBC,IAFZ,cACrBG,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,qDAObC,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACUC,EADV,kBAC2BO,IAFnB,cACzBJ,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOjBhC,EAAkB,mCAAG,WAAMV,GAAN,uFACTuC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACLpC,EADK,oBACcqC,IAFL,cAC1BG,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBI,EAAiB,mCAAG,WAAM7C,GAAN,uFACRuC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACLpC,EADK,4BACsBqC,IAFd,cACzBG,EADyB,yBAIxBA,EAASC,KAAKK,MAJU,2CAAH,sDAOjBC,EAAiB,mCAAG,WAAM/C,GAAN,uFACRuC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACLpC,EADK,4BACsBqC,IAFd,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.jsx","services/Api.jsx"],"sourcesContent":["import { ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeCircles\n      height=\"100\"\n      width=\"100\"\n      color=\"#4fa94d\"\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '50px',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"#3f51b5\"\n      innerCircleColor=\"#3f51b5\"\n      middleCircleColor=\"#3f51b5\"\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__pr0Uo\",\"movieDetailsBtn\":\"MovieDetails_movieDetailsBtn__ohDHC\"};","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMoviesDetails } from 'services/Api';\nimport css from './MovieDetails.module.css'\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetailsFilms = () => {\n      setLoading(true);\n\n      fetchMoviesDetails(movieId)\n        .then(detailMovie => {\n          setMovieInfo(detailMovie);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchMovieDetailsFilms();\n  }, [movieId]);\n\n  if (!movieInfo) return;\n\n  const { title, poster_path, genres, overview, vote_average } = movieInfo;\n  const rating = (vote_average * 10).toFixed(2);\n\n  return (\n    <main>\n      <Link to={location.state?.from ?? '/'}>\n        <button type=\"button\" className={css.movieDetailsBtn}>\n          {' '}\n          &#8656; Go back\n        </button>\n      </Link>\n      <div className={css.movieDetails}>\n        <hr />\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/original/${poster_path}`\n              : 'https://upload.wikimedia.org/wikipedia/commons/d/d1/Image_not_available.png'\n          }\n          alt={`Poster ${title}`}\n          width=\"300px\"\n        />\n\n        <div>\n          <h1>{title}</h1>\n          <p>User Score: {rating}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres.map(({ name }) => name).join(', ')}</p>\n        </div>\n      </div>\n      <hr />\n\n      <h2>Additional information</h2>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <hr />\n      <Outlet />\n      {loading && <Loader />}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0b7ed72c0b07bc683ffc3b8a0e430792';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `${URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async quare => {\n  const response = await axios.get(\n    `${URL}/search/movie?api_key=${API_KEY}&query=${quare}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesDetails = async movieId => {\n  const response = await axios.get(\n    `${URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n"],"names":["Loader","height","width","color","wrapperStyle","display","justifyContent","marginTop","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","movieId","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","location","useLocation","useEffect","fetchMoviesDetails","then","detailMovie","catch","error","console","log","finally","title","poster_path","genres","overview","rating","vote_average","toFixed","to","state","from","type","className","css","src","alt","map","name","join","URL","API_KEY","fetchTrending","axios","response","data","results","fetchSearchMovies","quare","fetchMovieCredits","cast","fetchMovieReviews"],"sourceRoot":""}