{"version":3,"file":"static/js/493.c9a186e4.chunk.js","mappings":"4LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CACZC,QAAS,OACTC,eAAgB,SAChBC,UAAW,QAEbC,aAAa,GACbC,SAAS,EACTC,UAAU,yBACVC,iBAAiB,UACjBC,iBAAiB,UACjBC,kBAAkB,WAGvB,C,uFCgCD,UAhDa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CAEEM,GAAW,IAEXE,EAAAA,EAAAA,IAAkBR,GACfS,MAAK,SAAAC,GACJN,EAAQM,EACT,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPT,GAAW,EACZ,GAbe,CAgBrB,GAAE,CAACN,KAGF,2BACGK,IAAW,SAAC,IAAD,KAEZ,wBACGF,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OACR,2BACE,gBACEC,IACEH,EAAY,8CAC+BA,GACvC,8EAENI,IAAG,iBAAYL,GACf7B,MAAM,WAER,uBAAI6B,KACJ,yBAAG,cAAYE,OAXRC,EADD,QAkBjB,C,+LClDKG,EAAM,+BACNC,EAAU,mCAEHC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACgBC,IAFZ,cACrBG,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,qDAObC,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACUC,EADV,kBAC2BO,IAFnB,cACzBJ,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,sDAOjBG,EAAkB,mCAAG,WAAMhC,GAAN,uFACT0B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACLvB,EADK,oBACcwB,IAFL,cAC1BG,EAD0B,yBAIzBA,EAASC,MAJgB,2CAAH,sDAOlBpB,EAAiB,mCAAG,WAAMR,GAAN,uFACR0B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACLvB,EADK,4BACsBwB,IAFd,cACzBG,EADyB,yBAIxBA,EAASC,KAAKzB,MAJU,2CAAH,sDAOjB8B,EAAiB,mCAAG,WAAMjC,GAAN,uFACR0B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACLvB,EADK,4BACsBwB,IAFd,cACzBG,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH,qD","sources":["components/Loader/Loader.jsx","pages/Cast.jsx","services/Api.jsx"],"sourcesContent":["import { ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeCircles\n      height=\"100\"\n      width=\"100\"\n      color=\"#4fa94d\"\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '50px',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"#3f51b5\"\n      innerCircleColor=\"#3f51b5\"\n      middleCircleColor=\"#3f51b5\"\n    />\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'services/Api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieCast = () => {\n      setLoading(true);\n\n      fetchMovieCredits(movieId)\n        .then(movieCast => {\n          setCast(movieCast);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n\n      <ul>\n        {cast.map(({ name, profile_path, character, id }) => (\n          <li key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/original/${profile_path}`\n                  : 'https://upload.wikimedia.org/wikipedia/commons/d/d1/Image_not_available.png'\n              }\n              alt={`Poster ${name}`}\n              width=\"100px\"\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0b7ed72c0b07bc683ffc3b8a0e430792';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `${URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async quare => {\n  const response = await axios.get(\n    `${URL}/search/movie?api_key=${API_KEY}&query=${quare}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMoviesDetails = async movieId => {\n  const response = await axios.get(\n    `${URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n"],"names":["Loader","height","width","color","wrapperStyle","display","justifyContent","marginTop","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","movieId","useParams","useState","cast","setCast","loading","setLoading","useEffect","fetchMovieCredits","then","movieCast","catch","error","console","log","finally","map","name","profile_path","character","id","src","alt","URL","API_KEY","fetchTrending","axios","response","data","results","fetchSearchMovies","quare","fetchMoviesDetails","fetchMovieReviews"],"sourceRoot":""}